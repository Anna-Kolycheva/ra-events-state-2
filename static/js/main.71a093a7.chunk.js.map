{"version":3,"sources":["products.js","components/IconSwitch/IconSwitch.jsx","components/CardsView/CardsView.jsx","components/ListView/ListView.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["products","name","price","color","img","IconSwitch","props","icon","onSwitch","className","onClick","CardsView","map","product","toUpperCase","type","src","alt","ListView","App","useState","selected","setSelected","iconView","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAuCeA,G,MAvCE,CACd,CACGC,KAAM,gBACNC,MAAO,MACPC,MAAO,MACPC,IAAK,wGAER,CACGH,KAAM,gBACNC,MAAO,MACPC,MAAO,QACPC,IAAK,wGAER,CACGH,KAAM,gBACNC,MAAO,MACPC,MAAO,OACPC,IAAK,wGAER,CACGH,KAAM,gBACNC,MAAO,MACPC,MAAO,QACPC,IAAK,wGAER,CACGH,KAAM,gBACNC,MAAO,MACPC,MAAO,QACPC,IAAK,wGAER,CACGH,KAAM,gBACNC,MAAO,MACPC,MAAO,QACPC,IAAK,0G,eC5BI,SAASC,EAAWC,GAAQ,IAChCC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,SACd,OACG,qBAAKC,UAAU,4BAA4BC,QAAS,kBAAMF,EAASD,IAAnE,SACIA,I,MCPK,SAASI,EAAT,GAAkC,IAAbX,EAAY,EAAZA,SACjC,OACG,qBAAKS,UAAU,WAAf,SACIT,EAASY,KAAI,SAACC,GAAD,OACX,sBAAKJ,UAAU,gBAAf,UACG,mBAAGA,UAAU,qBAAb,SACII,EAAQZ,KAAKa,gBAEjB,mBAAGL,UAAU,sBAAb,SAAoCI,EAAQV,QAC5C,oBAAGM,UAAU,sBAAb,cAAqCI,EAAQX,SAC7C,wBAAQa,KAAK,SAASN,UAAU,uBAAhC,yBAGA,qBACGA,UAAU,oBACVO,IAAKH,EAAQT,IACba,IAAKJ,EAAQZ,SAZiBY,EAAQZ,KAAOY,EAAQV,Y,MCJxD,SAASe,EAAT,GAAiC,IAAblB,EAAY,EAAZA,SAChC,OACG,qBAAKS,UAAU,WAAf,SACIT,EAASY,KAAI,SAACC,GAAD,OACX,sBAAKJ,UAAU,gBAAf,UACG,qBACGA,UAAU,oBACVO,IAAKH,EAAQT,IACba,IAAKJ,EAAQZ,OAEhB,qBAAKQ,UAAU,qBAAf,SACII,EAAQZ,KAAKa,gBAEjB,qBAAKL,UAAU,sBAAf,SAAsCI,EAAQV,QAC9C,sBAAKM,UAAU,sBAAf,cAAuCI,EAAQX,SAC/C,wBAAQa,KAAK,SAASN,UAAU,uBAAhC,2BAXiCI,EAAQZ,KAAOY,EAAQV,YCkBxDgB,MAnBf,WAAgB,IAAD,EACoBC,mBAAS,eAD7B,mBACLC,EADK,KACKC,EADL,KAOZ,OACG,sBAAKb,UAAU,MAAf,UACG,cAAC,EAAD,CAAYF,KAAMc,EAAUb,SAPjB,SAACD,GACf,IAAMgB,EAAoB,cAAThB,EAAuB,cAAgB,YACxDe,GAAY,kBAAMC,QAMD,cAAbF,EACE,cAAC,EAAD,CAAUrB,SAAUA,IAEpB,cAAC,EAAD,CAAWA,SAAUA,QCNlBwB,EAdS,SAACC,GAClBA,GAAeA,aAAuBC,UACvC,6BAAqBC,MAClB,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAChCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDpBQ,IAASC,OACN,cAAC,IAAMC,WAAP,UACG,cAAC,EAAD,MAEHC,SAASC,eAAe,SAM3Bb,M","file":"static/js/main.71a093a7.chunk.js","sourcesContent":["const products = [\n   {\n      name: 'Nike Metcon 2',\n      price: '130',\n      color: 'red',\n      img: 'https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/layouts/img/1.jpg',\n   },\n   {\n      name: 'Nike Metcon 2',\n      price: '130',\n      color: 'green',\n      img: 'https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/layouts/img/2.jpg',\n   },\n   {\n      name: 'Nike Metcon 2',\n      price: '130',\n      color: 'blue',\n      img: 'https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/layouts/img/3.jpg',\n   },\n   {\n      name: 'Nike Metcon 2',\n      price: '130',\n      color: 'black',\n      img: 'https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/layouts/img/4.jpg',\n   },\n   {\n      name: 'Nike free run',\n      price: '170',\n      color: 'black',\n      img: 'https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/layouts/img/7.jpg',\n   },\n   {\n      name: 'Nike Metcon 3',\n      price: '150',\n      color: 'green',\n      img: 'https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/layouts/img/5.jpg',\n   },\n];\n\nexport default products;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\nimport './IconSwitch.css';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function IconSwitch(props) {\n   const { icon, onSwitch } = props;\n   return (\n      <div className=\"iconswitch material-icons\" onClick={() => onSwitch(icon)}>\n         {icon}\n      </div>\n   );\n}\n\nIconSwitch.propTypes = {\n   icon: PropTypes.string.isRequired,\n   onSwitch: PropTypes.func.isRequired,\n};\n","import './CardsView.css';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function CardsView({ products }) {\n   return (\n      <div className=\"cardview\">\n         {products.map((product) => (\n            <div className=\"cardview-item\" key={product.name + product.color}>\n               <p className=\"cardview-item-name\">\n                  {product.name.toUpperCase()}\n               </p>\n               <p className=\"cardview-item-color\">{product.color}</p>\n               <p className=\"cardview-item-price\">${product.price}</p>\n               <button type=\"button\" className=\"cardview-item-button\">\n                  add to cart\n               </button>\n               <img\n                  className=\"cardview-item-img\"\n                  src={product.img}\n                  alt={product.name}\n               />\n            </div>\n         ))}\n      </div>\n   );\n}\n\nCardsView.propTypes = {\n   products: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import './ListView.css';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function ListView({ products }) {\n   return (\n      <div className=\"listview\">\n         {products.map((product) => (\n            <div className=\"listview-item\" key={product.name + product.color}>\n               <img\n                  className=\"listview-item-img\"\n                  src={product.img}\n                  alt={product.name}\n               />\n               <div className=\"listview-item-name\">\n                  {product.name.toUpperCase()}\n               </div>\n               <div className=\"listview-item-color\">{product.color}</div>\n               <div className=\"listview-item-price\">${product.price}</div>\n               <button type=\"button\" className=\"listview-item-button\">\n                  add to cart\n               </button>\n            </div>\n         ))}\n      </div>\n   );\n}\n\nListView.propTypes = {\n   products: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import './App.css';\nimport React, { useState } from 'react';\nimport products from './products';\nimport IconSwitch from './components/IconSwitch/IconSwitch';\nimport CardsView from './components/CardsView/CardsView';\nimport ListView from './components/ListView/ListView';\n\nfunction App() {\n   const [selected, setSelected] = useState('view_module');\n   const onSwitch = (icon) => {\n      const iconView = icon === 'view_list' ? 'view_module' : 'view_list';\n      setSelected(() => iconView);\n   };\n\n   return (\n      <div className=\"App\">\n         <IconSwitch icon={selected} onSwitch={onSwitch} />\n         {selected === 'view_list' ? (\n            <ListView products={products} />\n         ) : (\n            <CardsView products={products} />\n         )}\n      </div>\n   );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n   if (onPerfEntry && onPerfEntry instanceof Function) {\n      import('web-vitals').then(\n         ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n         }\n      );\n   }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}